{"ast":null,"code":"import { CART_ADD_BASKET, CART_REMOVE_BASKET, CART_SAVE_SHIPPING_ADDRESS, CART_PAYMENT_METHOD } from './constants/cartConstants';\nconst initialStateCart = {\n  loading: true,\n  basketItems: [],\n  shippingAddr: {},\n  paymentMethod: '',\n  error: ''\n};\nexport const cartReducer = (state = initialStateCart, action) => {\n  switch (action.type) {\n    case CART_ADD_BASKET:\n      {\n        //     const newitem= action.payload\n        //     console.log(\"BASKET ITEMS \",(state.basketItems.length));\n        //    let existItem=null\n        //     // if(state.basketItems===\"undefined\")\n        //         // console.log(\"Udefined basket\");\n        //     // else    \n        //          existItem=state.basketItems.find((x) => x.idname === newitem.idname)\n        //         //  const existItem = state.basketItems.find((x) => x.id === item.id)\n        //     if(existItem)\n        //     {\n        //         return({\n        //             ...state,\n        //             basketItems:[...state.basketItems]\n        //         })\n        //     }\n        //     else\n        //     {\n        //         return({\n        //             ...state,\n        //             basketItems:[...state.basketItems,newitem]\n        //         })\n        //     }\n        // -------------------------NEW CODE----------------------------\n        const item = action.payload;\n        const existItem = state.basketItems.find(x => x.idname === item.idname);\n        console.log(\"cart Reduce\", typeof state.basketItems.find(x => x.idname === item.idname) === 'undefined');\n        console.log(\"New ITEM \", item.idname);\n\n        if (existItem) {\n          {\n            console.log(\"EXISTITEM\");\n          }\n          return { ...state,\n            basketItems: state.basketItems.map(x => x.idname === existItem.idname ? item : x)\n          };\n        } else {\n          {\n            console.log(\"NOT EXISTITEM\");\n          }\n          return { ...state,\n            basketItems: [...state.basketItems, item]\n          };\n        }\n      }\n\n    case CART_REMOVE_BASKET:\n      {\n        const item = action.payload;\n        return { ...state,\n          basketItems: state.basketItems.filter(x => x.idname !== item.idname)\n        };\n      }\n\n    case CART_SAVE_SHIPPING_ADDRESS:\n      {\n        return { ...state,\n          shippingAddr: action.payload\n        };\n      }\n\n    case CART_PAYMENT_METHOD:\n      {\n        return { ...state,\n          paymentMethod: action.payload\n        };\n      }\n    //--------------------------------2.New code-----LocalStorage--------------------\n    // const item = action.payload\n    //   if(typeof(state.basketItems)==='undefined')\n    //   {\n    //     {console.log(\"1st IF\");}\n    //     return {\n    //       ...state,\n    //       basketItems: [item],\n    //   }\n    // }\n    // else\n    // {\n    //     const existItem = (typeof(state.basketItems.find((x) => x.idname === item.idname))!=='undefined')\n    //     console.log(\"CART Reduce\",(state.basketItems.find((x) => x.idname === item.idname)))\n    //     console.log(\"New ITEM \",item);\n    //   if (existItem) \n    //   {\n    //     {console.log(\"EXISTITEM\")}\n    //     return {\n    //       ...state,\n    //       basketItems: state.basketItems.map((x) =>  x.idname === existItem.idname ? item : x)\n    //     }\n    //   } \n    //   else \n    //   {\n    //     {console.log(\"NOT EXISTITEM\");}\n    //     return {\n    //       ...state,\n    //       basketItems: [...state.basketItems, item],\n    //     }\n    //   }\n    // }\n    // }// ADD TO BASKET\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/Users/shambhavi/Desktop/Amazone-Clone-Updated-codes-main/src/Reducers/cartReducer.js"],"names":["CART_ADD_BASKET","CART_REMOVE_BASKET","CART_SAVE_SHIPPING_ADDRESS","CART_PAYMENT_METHOD","initialStateCart","loading","basketItems","shippingAddr","paymentMethod","error","cartReducer","state","action","type","item","payload","existItem","find","x","idname","console","log","map","filter"],"mappings":"AAAA,SACEA,eADF,EAEEC,kBAFF,EAGEC,0BAHF,EAIEC,mBAJF,QAI4B,2BAJ5B;AAMA,MAAMC,gBAAgB,GACtB;AACIC,EAAAA,OAAO,EAAE,IADb;AAEIC,EAAAA,WAAW,EAAC,EAFhB;AAGIC,EAAAA,YAAY,EAAC,EAHjB;AAIIC,EAAAA,aAAa,EAAC,EAJlB;AAKIC,EAAAA,KAAK,EAAC;AALV,CADA;AASA,OAAO,MAAMC,WAAW,GAAG,CAAEC,KAAK,GAACP,gBAAR,EAA0BQ,MAA1B,KAC3B;AACI,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKb,eAAL;AAAsB;AAEtB;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGI;AAEN,cAAMc,IAAI,GAAGF,MAAM,CAACG,OAApB;AACA,cAAMC,SAAS,GAAIL,KAAK,CAACL,WAAN,CAAkBW,IAAlB,CAAwBC,CAAD,IAAOA,CAAC,CAACC,MAAF,KAAaL,IAAI,CAACK,MAAhD,CAAnB;AAEEC,QAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA0B,OAAOV,KAAK,CAACL,WAAN,CAAkBW,IAAlB,CAAwBC,CAAD,IAAOA,CAAC,CAACC,MAAF,KAAaL,IAAI,CAACK,MAAhD,CAAP,KAAkE,WAA5F;AAEAC,QAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAwBP,IAAI,CAACK,MAA7B;;AAEF,YAAIH,SAAJ,EAAe;AACb;AAACI,YAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AAAyB;AAC1B,iBAAO,EACL,GAAGV,KADE;AAELL,YAAAA,WAAW,EAAEK,KAAK,CAACL,WAAN,CAAkBgB,GAAlB,CAAuBJ,CAAD,IAAQA,CAAC,CAACC,MAAF,KAAaH,SAAS,CAACG,MAAvB,GAAgCL,IAAhC,GAAuCI,CAArE;AAFR,WAAP;AAKD,SAPD,MAOO;AACL;AAACE,YAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AAA8B;AAC/B,iBAAO,EACL,GAAGV,KADE;AAELL,YAAAA,WAAW,EAAE,CAAC,GAAGK,KAAK,CAACL,WAAV,EAAuBQ,IAAvB;AAFR,WAAP;AAKD;AACF;;AAEA,SAAKb,kBAAL;AAAyB;AAExB,cAAMa,IAAI,GAAGF,MAAM,CAACG,OAApB;AAEC,eAAO,EACL,GAAGJ,KADE;AAELL,UAAAA,WAAW,EAAEK,KAAK,CAACL,WAAN,CAAkBiB,MAAlB,CAAyBL,CAAC,IAAGA,CAAC,CAACC,MAAF,KAAYL,IAAI,CAACK,MAA9C;AAFR,SAAP;AAID;;AAGD,SAAKjB,0BAAL;AAAiC;AAE9B,eAAO,EACN,GAAGS,KADG;AAENJ,UAAAA,YAAY,EAAEK,MAAM,CAACG;AAFf,SAAP;AAIF;;AAED,SAAKZ,mBAAL;AAA0B;AAEzB,eAAO,EACN,GAAGQ,KADG;AAENH,UAAAA,aAAa,EAAEI,MAAM,CAACG;AAFhB,SAAP;AAIF;AAIA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAGI;AACI,aAAOJ,KAAP;AA/HR;AAmIH,CArIM","sourcesContent":["import {\n  CART_ADD_BASKET, \n  CART_REMOVE_BASKET, \n  CART_SAVE_SHIPPING_ADDRESS ,\n  CART_PAYMENT_METHOD} from './constants/cartConstants'\n\nconst initialStateCart=\n{\n    loading: true,\n    basketItems:[],\n    shippingAddr:{},\n    paymentMethod:'',\n    error:''\n}\n\nexport const cartReducer = ( state=initialStateCart ,action) =>\n{\n    switch(action.type){\n        case CART_ADD_BASKET: {\n            \n        //     const newitem= action.payload\n        //     console.log(\"BASKET ITEMS \",(state.basketItems.length));\n           \n        //    let existItem=null\n        //     // if(state.basketItems===\"undefined\")\n        //         // console.log(\"Udefined basket\");\n        //     // else    \n        //          existItem=state.basketItems.find((x) => x.idname === newitem.idname)\n        //         //  const existItem = state.basketItems.find((x) => x.id === item.id)\n\n        //     if(existItem)\n        //     {\n        //         return({\n        //             ...state,\n        //             basketItems:[...state.basketItems]\n        //         })\n        //     }\n        //     else\n        //     {\n        //         return({\n        //             ...state,\n        //             basketItems:[...state.basketItems,newitem]\n        //         })\n        //     }\n\n\n            // -------------------------NEW CODE----------------------------\n\n      const item = action.payload\n      const existItem = (state.basketItems.find((x) => x.idname === item.idname))\n\n        console.log(\"cart Reduce\",typeof(state.basketItems.find((x) => x.idname === item.idname))==='undefined')\n\n        console.log(\"New ITEM \",item.idname);\n\n      if (existItem) {\n        {console.log(\"EXISTITEM\")}\n        return {\n          ...state,\n          basketItems: state.basketItems.map((x) =>  x.idname === existItem.idname ? item : x)\n          \n        }\n      } else {\n        {console.log(\"NOT EXISTITEM\");}\n        return {\n          ...state,\n          basketItems: [...state.basketItems, item],\n          \n        }\n      }\n    }\n\n     case CART_REMOVE_BASKET: {\n\n      const item = action.payload\n\n       return {\n         ...state,\n         basketItems: state.basketItems.filter(x=> x.idname !==item.idname )\n       }\n     }\n\n\n     case CART_SAVE_SHIPPING_ADDRESS: {\n\n        return {\n         ...state,\n         shippingAddr: action.payload\n       }\n     }\n\n     case CART_PAYMENT_METHOD: {\n\n      return {\n       ...state,\n       paymentMethod: action.payload\n     }\n   }\n\n\n\n    //--------------------------------2.New code-----LocalStorage--------------------\n    // const item = action.payload\n\n    \n    //   if(typeof(state.basketItems)==='undefined')\n    //   {\n    //     {console.log(\"1st IF\");}\n    //     return {\n    //       ...state,\n    //       basketItems: [item],\n    //   }\n    // }\n    // else\n    // {\n\n    //     const existItem = (typeof(state.basketItems.find((x) => x.idname === item.idname))!=='undefined')\n    //     console.log(\"CART Reduce\",(state.basketItems.find((x) => x.idname === item.idname)))\n    //     console.log(\"New ITEM \",item);\n\n    //   if (existItem) \n    //   {\n    //     {console.log(\"EXISTITEM\")}\n    //     return {\n    //       ...state,\n    //       basketItems: state.basketItems.map((x) =>  x.idname === existItem.idname ? item : x)\n          \n    //     }\n    //   } \n\n    //   else \n    //   {\n    //     {console.log(\"NOT EXISTITEM\");}\n    //     return {\n    //       ...state,\n    //       basketItems: [...state.basketItems, item],\n          \n    //     }\n    //   }\n    // }\n    // }// ADD TO BASKET\n       \n    \n        default:\n            return state\n\n\n }\n}"]},"metadata":{},"sourceType":"module"}