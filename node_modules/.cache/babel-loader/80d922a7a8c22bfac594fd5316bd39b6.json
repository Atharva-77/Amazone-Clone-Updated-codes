{"ast":null,"code":"import { createStore, applyMiddleware, combineReducers } from \"redux\";\nimport thunk from 'redux-thunk';\nimport { productListReducer, productDetailsReducer } from './Reducers/productReducer';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { cartReducer } from \"./Reducers/cartReducer\";\nimport { userLoginReducer, userRegisterReducer, userProfileDetailsReducer, adminUserListReducer } from \"./Reducers/userReducer\";\nimport { orderListReducer, getorderListReducer, orderPayReducer } from \"./Reducers/orderReducer\"; // const initialState={}\n\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  cartList: cartReducer,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userProfileDetails: userProfileDetailsReducer,\n  adminUserList: adminUserListReducer,\n  orderList: orderListReducer,\n  getorderList: getorderListReducer,\n  orderPay: orderPayReducer\n}); // const cartItemStorage= localStorage.getItem('cartItemsss') ? JSON.parse(localStorage.getItem('cartItemsss')): []\n// const cartItemStorage=[]\n// console.log(\"STORECartItem\",cartItemStorage);\n// const initialState=\n// {\n//     cartList: {cartItemsss:cartItemStorage}\n// }\n// const store=createStore(reducer,initialState,composeWithDevTools(applyMiddleware(thunk)))\n\nconst store = createStore(reducer, composeWithDevTools(applyMiddleware(thunk)));\nexport default store;","map":{"version":3,"sources":["/Users/shambhavi/Desktop/Amazone-Clone-Updated-codes-main/src/Store.js"],"names":["createStore","applyMiddleware","combineReducers","thunk","productListReducer","productDetailsReducer","composeWithDevTools","cartReducer","userLoginReducer","userRegisterReducer","userProfileDetailsReducer","adminUserListReducer","orderListReducer","getorderListReducer","orderPayReducer","reducer","productList","productDetails","cartList","userLogin","userRegister","userProfileDetails","adminUserList","orderList","getorderList","orderPay","store"],"mappings":"AAAA,SAAQA,WAAR,EAAqBC,eAArB,EAAsCC,eAAtC,QAA4D,OAA5D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAAQC,kBAAR,EAA4BC,qBAA5B,QAAwD,2BAAxD;AACA,SAAQC,mBAAR,QAAmC,0BAAnC;AACA,SAASC,WAAT,QAA4B,wBAA5B;AACA,SAASC,gBAAT,EAA0BC,mBAA1B,EAA+CC,yBAA/C,EAAyEC,oBAAzE,QAAqG,wBAArG;AACA,SAASC,gBAAT,EAA0BC,mBAA1B,EAA8CC,eAA9C,QAAqE,yBAArE,C,CAGA;;AAGA,MAAMC,OAAO,GAACb,eAAe,CAAC;AAC1Bc,EAAAA,WAAW,EAAEZ,kBADa;AAE1Ba,EAAAA,cAAc,EAAEZ,qBAFU;AAG1Ba,EAAAA,QAAQ,EAAEX,WAHgB;AAK1BY,EAAAA,SAAS,EAACX,gBALgB;AAM1BY,EAAAA,YAAY,EAACX,mBANa;AAO1BY,EAAAA,kBAAkB,EAACX,yBAPO;AAQ1BY,EAAAA,aAAa,EAACX,oBARY;AAU1BY,EAAAA,SAAS,EAACX,gBAVgB;AAW1BY,EAAAA,YAAY,EAACX,mBAXa;AAY1BY,EAAAA,QAAQ,EAACX;AAZiB,CAAD,CAA7B,C,CAkBA;AAEA;AACA;AAEI;AACA;AACA;AACA;AACJ;;AAEA,MAAMY,KAAK,GAAC1B,WAAW,CAACe,OAAD,EAAST,mBAAmB,CAACL,eAAe,CAACE,KAAD,CAAhB,CAA5B,CAAvB;AAEA,eAAeuB,KAAf","sourcesContent":["import {createStore, applyMiddleware, combineReducers} from \"redux\"\nimport thunk from 'redux-thunk'\nimport {productListReducer, productDetailsReducer} from './Reducers/productReducer'\nimport {composeWithDevTools } from 'redux-devtools-extension';\nimport { cartReducer } from \"./Reducers/cartReducer\";\nimport { userLoginReducer,userRegisterReducer, userProfileDetailsReducer,adminUserListReducer } from \"./Reducers/userReducer\";\nimport { orderListReducer,getorderListReducer,orderPayReducer } from \"./Reducers/orderReducer\";\n\n\n// const initialState={}\n\n\nconst reducer=combineReducers({\n    productList: productListReducer, \n    productDetails: productDetailsReducer,\n    cartList: cartReducer,\n\n    userLogin:userLoginReducer,\n    userRegister:userRegisterReducer,\n    userProfileDetails:userProfileDetailsReducer,\n    adminUserList:adminUserListReducer,\n    \n    orderList:orderListReducer,\n    getorderList:getorderListReducer,\n    orderPay:orderPayReducer,\n    \n    \n})\n\n\n// const cartItemStorage= localStorage.getItem('cartItemsss') ? JSON.parse(localStorage.getItem('cartItemsss')): []\n    \n// const cartItemStorage=[]\n// console.log(\"STORECartItem\",cartItemStorage);\n\n    // const initialState=\n    // {\n    //     cartList: {cartItemsss:cartItemStorage}\n    // }\n// const store=createStore(reducer,initialState,composeWithDevTools(applyMiddleware(thunk)))\n\nconst store=createStore(reducer,composeWithDevTools(applyMiddleware(thunk)))\n\nexport default store;"]},"metadata":{},"sourceType":"module"}