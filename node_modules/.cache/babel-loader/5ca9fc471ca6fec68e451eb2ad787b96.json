{"ast":null,"code":"import { ORDER_LIST_REQUEST, ORDER_LIST_SUCCESS, ORDER_LIST_FAILURE, GET_ORDER_LIST_REQUEST, GET_ORDER_LIST_SUCCESS, GET_ORDER_LIST_FAILURE, ORDER_PAY_REQUEST, ORDER_PAY_SUCCESS, ORDER_PAY_FAILURE } from '../constants/orderConstants';\nimport axios from 'axios';\n\nconst orderListDetailsRequest = () => {\n  return {\n    type: ORDER_LIST_REQUEST\n  };\n};\n\nconst orderListDetailsSuccess = data => {\n  return {\n    type: ORDER_LIST_SUCCESS,\n    payload: data\n  };\n};\n\nconst orderListDetailsFailure = error => {\n  return {\n    type: ORDER_LIST_FAILURE,\n    payload: error\n  };\n};\n\nexport const orderListAction_details = order => async (dispatch, getState) => {\n  try {\n    dispatch(orderListDetailsRequest());\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState(); //Q.use??\n\n    const config = {\n      headers: {\n        'Content-Type': \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    }; // console.log(\"Order After config\");\n    //Q.WHy not direct profile in place of id?\n    // console.log(\"waiting for data\");\n\n    const {\n      data\n    } = await axios.post(`http://localhost:4000/order/add/`, order, config); // console.log(\"order After data\",data);\n\n    dispatch(orderListDetailsSuccess(data)); // console.log(\"order success\");\n  } catch (error) {\n    console.log(\"User orderListDetails actions\");\n    dispatch(orderListDetailsFailure(error));\n  }\n}; // get order details\n\nconst getorderListDetailsRequest = () => {\n  return {\n    type: GET_ORDER_LIST_REQUEST\n  };\n};\n\nconst getorderListDetailsSuccess = data => {\n  return {\n    type: GET_ORDER_LIST_SUCCESS,\n    payload: data\n  };\n};\n\nconst getorderListDetailsFailure = error => {\n  return {\n    type: GET_ORDER_LIST_FAILURE,\n    payload: error\n  };\n};\n\nexport const getorderListAction_details = id => async (dispatch, getState) => {\n  try {\n    dispatch(getorderListDetailsRequest());\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState(); //Q.use??\n\n    const config = {\n      headers: {\n        // 'Content-Type':\"application/json\",\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    }; // console.log(\"Order After config\");\n    //Q.WHy not direct profile in place of id?\n    // console.log(\"waiting for data\");\n\n    const {\n      data\n    } = await axios.get(`http://localhost:4000/order/${id}`, config); // console.log(\"order After data\",data);\n\n    dispatch(getorderListDetailsSuccess(data)); // console.log(\"order success\");\n  } catch (error) {\n    console.log(\"User GetorderListDetails actions\");\n    dispatch(getorderListDetailsFailure(error));\n  }\n}; //Payment action\n\nexport const payorderAction_details = (id, paymentResult) => async (dispatch, getState) => {\n  //frm paypal\n  try {\n    dispatch({\n      type: ORDER_PAY_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState(); //Q.use??\n\n    const config = {\n      headers: {\n        'Content-Type': \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    }; // console.log(\"Order After config\");\n    //Q.WHy not direct profile in place of id?\n    // console.log(\"waiting for data\");\n\n    const {\n      data\n    } = await axios.put(`http://localhost:4000/order/${id}/pay`, paymentResult, config); // console.log(\"order After data\",data);\n\n    dispatch({\n      type: ORDER_PAY_SUCCESS,\n      payload: data\n    }); // console.log(\"order success\");\n  } catch (error) {\n    console.log(\"Payment failure actions\");\n    dispatch({\n      type: ORDER_PAY_FAILURE,\n      payload: error\n    });\n  }\n};","map":{"version":3,"sources":["/Users/shambhavi/Desktop/Amazone-Clone-Updated-codes-main/src/Reducers/actions/orderActions.js"],"names":["ORDER_LIST_REQUEST","ORDER_LIST_SUCCESS","ORDER_LIST_FAILURE","GET_ORDER_LIST_REQUEST","GET_ORDER_LIST_SUCCESS","GET_ORDER_LIST_FAILURE","ORDER_PAY_REQUEST","ORDER_PAY_SUCCESS","ORDER_PAY_FAILURE","axios","orderListDetailsRequest","type","orderListDetailsSuccess","data","payload","orderListDetailsFailure","error","orderListAction_details","order","dispatch","getState","userLogin","userInfo","config","headers","Authorization","token","post","console","log","getorderListDetailsRequest","getorderListDetailsSuccess","getorderListDetailsFailure","getorderListAction_details","id","get","payorderAction_details","paymentResult","put"],"mappings":"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","sourcesContent":["import {\n\n    ORDER_LIST_REQUEST,\n    ORDER_LIST_SUCCESS,\n    ORDER_LIST_FAILURE,\n    \n    GET_ORDER_LIST_REQUEST,\n    GET_ORDER_LIST_SUCCESS,\n    GET_ORDER_LIST_FAILURE,\n    ORDER_PAY_REQUEST,\n    ORDER_PAY_SUCCESS,\n    ORDER_PAY_FAILURE,\n    \n    } from '../constants/orderConstants' \n\n\nimport axios from 'axios';\n\nconst orderListDetailsRequest = () =>\n{\n    return {\n        type:ORDER_LIST_REQUEST\n    }\n}\n\nconst orderListDetailsSuccess = data =>\n{\n    return{\n      type:ORDER_LIST_SUCCESS, \n      payload: data\n    }\n}\n\nconst orderListDetailsFailure = error =>\n{\n    return{\n       type:ORDER_LIST_FAILURE,\n       payload: error\n    }\n}\n\nexport const orderListAction_details =(order)=> async(dispatch,getState)=> {\n\ntry \n{\n    dispatch(orderListDetailsRequest())\n\n    const {userLogin:{userInfo}} = getState()\n   \n    //Q.use??\n    const config={\n        headers:{\n            'Content-Type':\"application/json\",\n            Authorization:`Bearer ${userInfo.token}`\n        }\n    }\n    // console.log(\"Order After config\");\n    //Q.WHy not direct profile in place of id?\n    // console.log(\"waiting for data\");\n\n    const {data}= await axios.post(`http://localhost:4000/order/add/`,order,config)\n\n    // console.log(\"order After data\",data);\n\n    dispatch(orderListDetailsSuccess(data))\n    // console.log(\"order success\");\n   \n\n} catch (error) {\n    console.log(\"User orderListDetails actions\");\n    dispatch(orderListDetailsFailure(error))\n    \n}\n}\n\n\n\n\n\n// get order details\n\nconst getorderListDetailsRequest = () =>\n{\n    return {\n        type:GET_ORDER_LIST_REQUEST\n    }\n}\n\nconst getorderListDetailsSuccess = data =>\n{\n    return{\n      type:GET_ORDER_LIST_SUCCESS, \n      payload: data\n    }\n}\n\nconst getorderListDetailsFailure = error =>\n{\n    return{\n       type:GET_ORDER_LIST_FAILURE,\n       payload: error\n    }\n}\n\nexport const getorderListAction_details =(id)=> async(dispatch,getState)=> {\n\n    try \n    {\n        dispatch(getorderListDetailsRequest())\n    \n        const {userLogin:{userInfo}} = getState()\n       \n        //Q.use??\n        const config={\n            headers:{\n                // 'Content-Type':\"application/json\",\n                Authorization:`Bearer ${userInfo.token}`\n            }\n        }\n        // console.log(\"Order After config\");\n        //Q.WHy not direct profile in place of id?\n        // console.log(\"waiting for data\");\n    \n        const {data}= await axios.get(`http://localhost:4000/order/${id}`,config)\n    \n        // console.log(\"order After data\",data);\n    \n        dispatch(getorderListDetailsSuccess(data))\n        // console.log(\"order success\");\n       \n    \n    } catch (error) {\n        console.log(\"User GetorderListDetails actions\");\n        dispatch(getorderListDetailsFailure(error))\n        \n    }\n}\n\n\n\n\n//Payment action\nexport const payorderAction_details =(id,paymentResult)=> async(dispatch,getState)=> {\n                                        //frm paypal\n    try \n    {\n        dispatch(\n            {\n                type:ORDER_PAY_REQUEST\n            })\n\n        const {userLogin:{userInfo}} = getState()\n        \n        //Q.use??\n        const config={\n            headers:{\n                'Content-Type':\"application/json\",\n                Authorization:`Bearer ${userInfo.token}`\n            }\n        }\n        // console.log(\"Order After config\");\n        //Q.WHy not direct profile in place of id?\n        // console.log(\"waiting for data\");\n\n        const {data}= await axios.put(`http://localhost:4000/order/${id}/pay`,paymentResult,config)\n\n        // console.log(\"order After data\",data);\n\n        dispatch(\n            {\n                type:ORDER_PAY_SUCCESS, \n                payload: data\n            })        // console.log(\"order success\");\n        \n\n    } \n    catch (error) {\n        console.log(\"Payment failure actions\");\n        dispatch(\n            {\n                type:ORDER_PAY_FAILURE, \n                payload: error\n            })        \n    }\n}\n\n\n\n\n    \n"]},"metadata":{},"sourceType":"module"}