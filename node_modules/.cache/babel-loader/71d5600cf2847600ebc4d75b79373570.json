{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/shambhavi/Desktop/Amazone-Clone-Updated-codes-main/src/Payment.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router';\nimport { paymentMethodAction } from './Reducers/actions/cartActions';\nimport './Payment.css'; // import { set } from 'mongoose';\n\nfunction Payment() {\n  _s();\n\n  let history = useHistory();\n  const dispatch = useDispatch();\n  const cartList = useSelector(state => state.cartList);\n  const {\n    shippingAddr\n  } = cartList; // console.log(\"Shipping ADDR\",shippingAddr,Object.keys(shippingAddr).length,typeof(shippingAddr)=='undefined') \n\n  const [paymentMethod, setPaymentMethod] = useState('Paypal'); // const redirect=`/`\n\n  if (Object.keys(shippingAddr).length == 0) history.push('/shipping'); // console.log(\"Ship if len:-\",Object.keys(shippingAddr).length);\n  else console.log(\"Ship else len:-\", shippingAddr); // useEffect(() => {\n  //     //when getting request, userinfo becomes true as  userLoginRequest is called.\n  //     //length==0 becomes when 1st time login pg is visited\n  //     //invalid details is received when details don't match\n  //     //if user is logged in  direct to home page\n  //     if( !(typeof(userInfoR)=='undefined') && userInfoR.length!=0 && userInfoR!=='Invalid details')\n  //     {\n  //         history.push(redirect)\n  //     }\n  // }, [history,userInfoR,redirect])\n  // const onAddress=(e)=> \n  // { \n  //     setAddress(e.target.value)\n  // }\n  // const onCity=(e)=> \n  // { \n  //     setCity(e.target.value)\n  // }\n  // const onPostalCode=(e)=> \n  // { \n  //     setPostalCode(e.target.value)\n  // }\n  // const onCountry=(e)=> \n  // { \n  //     setCountry(e.target.value)\n  // }\n\n  const submit_form = () => {\n    dispatch(paymentMethodAction(paymentMethod));\n    history.push('/placeorder'); // if(password!==confirmPassword)\n    // {\n    //     console.log(\"Pass not matching\");\n    // }\n    // // else\n    // {\n    //     console.log(\"b4 reg actions\");\n    //     // dispatch(userRegisterAction_details(Name,email,password))\n    //     console.log(\"a4 reg actions\");\n    // }\n    // const userData={\n    //     \"Name\":name, //Lhs as mentioned in postman api tezting or in routes-->exercise_route.js . Name as mentioned as in router.post function\n    //     \"email\":email,\n    //     \"password\":password,\n    //     \"confirmPassword\":confirmPassword\n    // }\n    // axios.post(`http://localhost:4000/register_brad/add`,userData)\n    //  .then(res => console.log(res.data))\n    //  dispatch(userAction_details(email,password))\n    //  setName('')\n    //  setEmail('')\n    //  setPassword('')\n    //  setconfirmPassword('')\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"register\",\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"logo\",\n        src: \"https://www.logodesign.net/logo/peace-bird-in-water-drop-3572ld.png\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"registration_details\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"heading\",\n        children: \"Payment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"radio\",\n        id: \"paypal1\" //id same value as in label\n        ,\n        name: \"paymentmeth\" // only 1 frm this name is selected when submitted.Hence all have same name\n        ,\n        value: \"Paypal\" // This value is submitted when form submitted\n        ,\n        onChange: e => setPaymentMethod(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"paypal1\",\n        children: \"PAYPAL\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"radio\",\n        id: \"stripe1\",\n        name: \"paymentmeth\",\n        value: \"Stripe\",\n        onChange: e => setPaymentMethod(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"stripe1\",\n        children: \"STRIPE\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"create_acc\",\n        onClick: submit_form,\n        children: \"Continue\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Payment, \"SGbvEL9zJrgXMNFVsnbzc00evkk=\", false, function () {\n  return [useHistory, useDispatch, useSelector];\n});\n\n_c = Payment;\nexport default Payment;\n\nvar _c;\n\n$RefreshReg$(_c, \"Payment\");","map":{"version":3,"sources":["/Users/shambhavi/Desktop/Amazone-Clone-Updated-codes-main/src/Payment.js"],"names":["React","useEffect","useState","Link","useDispatch","useSelector","useHistory","paymentMethodAction","Payment","history","dispatch","cartList","state","shippingAddr","paymentMethod","setPaymentMethod","Object","keys","length","push","console","log","submit_form","e","target","value"],"mappings":"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","sourcesContent":["import React,{useEffect,useState} from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { useDispatch,useSelector } from 'react-redux';\n\nimport {  useHistory } from 'react-router'; \n\nimport {  paymentMethodAction } from './Reducers/actions/cartActions';\n\nimport './Payment.css' ;\n// import { set } from 'mongoose';\n\nfunction Payment() {\n    let history = useHistory()\n\n\n    const dispatch = useDispatch()\n\n    const cartList = useSelector(state => state.cartList)\n    const {shippingAddr} =cartList \n    // console.log(\"Shipping ADDR\",shippingAddr,Object.keys(shippingAddr).length,typeof(shippingAddr)=='undefined') \n\n    const [paymentMethod, setPaymentMethod] = useState('Paypal')\n  \n    // const redirect=`/`\n    if((Object.keys(shippingAddr).length)==0)\n        history.push('/shipping')\n        // console.log(\"Ship if len:-\",Object.keys(shippingAddr).length);\n    else\n    console.log(\"Ship else len:-\",shippingAddr);\n\n    \n    // useEffect(() => {\n    //     //when getting request, userinfo becomes true as  userLoginRequest is called.\n    //     //length==0 becomes when 1st time login pg is visited\n    //     //invalid details is received when details don't match\n    //     //if user is logged in  direct to home page\n    //     if( !(typeof(userInfoR)=='undefined') && userInfoR.length!=0 && userInfoR!=='Invalid details')\n    //     {\n    //         history.push(redirect)\n    //     }\n    // }, [history,userInfoR,redirect])\n\n    // const onAddress=(e)=> \n    // { \n    //     setAddress(e.target.value)\n    // }\n    // const onCity=(e)=> \n    // { \n    //     setCity(e.target.value)\n    // }\n    // const onPostalCode=(e)=> \n    // { \n    //     setPostalCode(e.target.value)\n    // }\n    // const onCountry=(e)=> \n    // { \n    //     setCountry(e.target.value)\n    // }\n    \n    const submit_form=()=>\n    {\n        dispatch(paymentMethodAction(paymentMethod))\n        history.push('/placeorder')\n        // if(password!==confirmPassword)\n        // {\n        //     console.log(\"Pass not matching\");\n        // }\n        // // else\n        // {\n        //     console.log(\"b4 reg actions\");\n        //     // dispatch(userRegisterAction_details(Name,email,password))\n        //     console.log(\"a4 reg actions\");\n\n        // }\n       \n        // const userData={\n        //     \"Name\":name, //Lhs as mentioned in postman api tezting or in routes-->exercise_route.js . Name as mentioned as in router.post function\n        //     \"email\":email,\n        //     \"password\":password,\n        //     \"confirmPassword\":confirmPassword\n        // }\n\n        // axios.post(`http://localhost:4000/register_brad/add`,userData)\n        //  .then(res => console.log(res.data))\n\n        //  dispatch(userAction_details(email,password))\n\n        //  setName('')\n        //  setEmail('')\n        //  setPassword('')\n        //  setconfirmPassword('')\n        \n    }\n\n    return (\n        <div className=\"register\">\n            <Link to=\"/\">\n                {/* <img className=\"logo\" src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/a/a9/Amazon_logo.svg/1024px-Amazon_logo.svg.png\"/> */}\n                <img className=\"logo\" src=\"https://www.logodesign.net/logo/peace-bird-in-water-drop-3572ld.png\"/>\n\n            </Link>\n\n            <div className=\"registration_details\">\n                {/* <form> */}\n                <h1 className=\"heading\">Payment</h1>\n                \n                {/* {error}\n                {loading && <h2>Loading</h2>} */}\n\n                {/* <h2>Address</h2> */}\n                {/* <input value={address} onChange={onAddress} placeholder=\"Enter Full Name\"/> */}\n                \n                <input type=\"radio\" \n                        id=\"paypal1\" //id same value as in label\n                        name=\"paymentmeth\" // only 1 frm this name is selected when submitted.Hence all have same name\n                        value=\"Paypal\" // This value is submitted when form submitted\n                         onChange={(e)=>setPaymentMethod(e.target.value)}/>   \n                        \n                        {/* See here https://www.w3schools.com/tags/tryit.asp?filename=tryhtml5_input_type_radio */}\n                    <label for=\"paypal1\">PAYPAL</label>\n                 \n                <input type=\"radio\" \n                       id=\"stripe1\" \n                       name=\"paymentmeth\" \n                       value=\"Stripe\" \n                       onChange={(e)=>setPaymentMethod(e.target.value)}\n                       /> \n\n                    <label for=\"stripe1\">STRIPE</label>\n                \n\n                <button className=\"create_acc\" onClick={submit_form} >Continue</button>\n\n                \n                {/* </form> */}\n            </div>\n\n        </div>\n    )\n}\n\nexport default Payment\n"]},"metadata":{},"sourceType":"module"}