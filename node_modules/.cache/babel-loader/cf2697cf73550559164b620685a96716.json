{"ast":null,"code":"import { USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGIN_FAILURE, USER_LOGOUT, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_REGISTER_FAILURE, USER_DETAILS_REQUEST, USER_DETAILS_SUCCESS, USER_DETAILS_FAILURE, USER_DETAILS_RESET, ADMIN_USER_LIST_REQUEST, ADMIN_USER_LIST_SUCCESS, ADMIN_USER_LIST_FAILURE, USER_REGISTER_RESET } from '../constants/userConstants';\nimport axios from 'axios'; //LOGIN\n\nconst userLoginRequest = () => {\n  return {\n    type: USER_LOGIN_REQUEST\n  };\n};\n\nconst userLoginSuccess = data => {\n  return {\n    type: USER_LOGIN_SUCCESS,\n    payload: data\n  };\n};\n\nconst userLoginFailure = error => {\n  return {\n    type: USER_LOGIN_FAILURE,\n    payload: error\n  };\n};\n\nconst userLogout = () => {\n  return {\n    type: USER_LOGOUT\n  };\n};\n\nexport const userAction_details = (email, password) => async dispatch => {\n  try {\n    dispatch(userLoginRequest());\n    const config = {\n      headers: {\n        'Content-Type': \"application/json\"\n      }\n    };\n    const {\n      data\n    } = await axios.post('http://localhost:4000/login_brad/add', {\n      email,\n      password\n    }, config);\n    dispatch(userLoginSuccess(data)); // localStorage.setItem('cartItemsss',JSON.stringify(getState().cartList.cartItemsss))\n  } catch (error) {\n    dispatch(userLoginFailure(error));\n  }\n}; //Logout\n\nexport const logout_action = () => async (dispatch) => {\n  dispatch(userLogout());\n}; //Profile logout\n\nexport const profileReset_action = () => async (dispatch) => {\n  dispatch({\n    type: USER_DETAILS_RESET\n  });\n}; //Register logout\n\nexport const registerReset_action = () => async (dispatch) => {\n  dispatch({\n    type: USER_REGISTER_RESET\n  });\n}; //Register\n\nconst userRegisterRequest = () => {\n  return {\n    type: USER_REGISTER_REQUEST\n  };\n};\n\nconst userRegisterSuccess = data => {\n  return {\n    type: USER_REGISTER_SUCCESS,\n    payload: data\n  };\n};\n\nconst userRegisterFailure = error => {\n  return {\n    type: USER_REGISTER_FAILURE,\n    payload: error\n  };\n};\n\nexport const userRegisterAction_details = (name, email, password) => async dispatch => {\n  try {\n    dispatch(userRegisterRequest());\n    const config = {\n      headers: {\n        'Content-Type': \"application/json\"\n      }\n    };\n    console.log(\"After config\");\n    const {\n      data\n    } = await axios.post('http://localhost:4000/register_brad/add', {\n      name,\n      email,\n      password\n    }, config);\n    console.log(\"After data\");\n    dispatch(userRegisterSuccess(data));\n    console.log(\"USER RR SUEECESS\");\n    dispatch(userLoginSuccess(data));\n    console.log(\"USER LL\"); // localStorage.setItem('cartItemsss',JSON.stringify(getState().cartList.cartItemsss))\n  } catch (error) {\n    console.log(\"User Register actions\");\n    dispatch(userRegisterFailure(error));\n  }\n}; //UserProfileDetails\n\nconst userProfileDetailsRequest = () => {\n  return {\n    type: USER_DETAILS_REQUEST\n  };\n};\n\nconst userProfileDetailsSuccess = data => {\n  return {\n    type: USER_DETAILS_SUCCESS,\n    payload: data\n  };\n};\n\nconst userProfileDetailsFailure = error => {\n  return {\n    type: USER_DETAILS_FAILURE,\n    payload: error\n  };\n};\n\nexport const userProfileAction_details = id => async (dispatch, getState) => {\n  try {\n    dispatch(userProfileDetailsRequest());\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState(); //Q.use??\n\n    const config = {\n      headers: {\n        'Content-Type': \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    console.log(\"Profile After config\"); //Q.WHy not direct profile in place of id?\n\n    console.log(\"waiting for data\");\n    const {\n      data\n    } = await axios.get(`http://localhost:4000/login_brad/${id}`, config);\n    console.log(\"Profile After data\", data);\n    dispatch(userProfileDetailsSuccess(data));\n    console.log(\"Profile success\");\n  } catch (error) {\n    console.log(\"User UserProfileDetails actions\");\n    dispatch(userProfileDetailsFailure(error));\n  }\n}; //ADMIN User list\n\nconst adminUserProfileRequest = () => {\n  return {\n    type: ADMIN_USER_LIST_REQUEST\n  };\n};\n\nconst adminUserProfileSuccess = data => {\n  return {\n    type: ADMIN_USER_LIST_SUCCESS,\n    payload: data\n  };\n};\n\nconst adminUserProfileFailure = error => {\n  return {\n    type: ADMIN_USER_LIST_FAILURE,\n    payload: error\n  };\n};\n\nexport const adminUserAction = () => async (dispatch, getState) => {\n  try {\n    dispatch(adminUserProfileRequest());\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState(); //Q.use??\n\n    const config = {\n      headers: {\n        // 'Content-Type':\"application/json\",\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    }; // console.log(\"Profile After config\");\n    //Q.WHy not direct profile in place of id?\n    // console.log(\"waiting for data\");\n\n    const {\n      data\n    } = await axios.get(`http://localhost:4000/login_brad/allUsers`, config); // console.log(\"Profile After data\",data);\n\n    dispatch(adminUserProfileSuccess(data)); // console.log(\"Profile success\");\n  } catch (error) {\n    console.log(\"User ADMINProfileDetails actions\");\n    dispatch(adminUserProfileFailure(error));\n  }\n};","map":{"version":3,"sources":["/Users/shambhavi/Desktop/Amazone-Clone-Updated-codes-main/src/Reducers/actions/userActions.js"],"names":["USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAILURE","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAILURE","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAILURE","USER_DETAILS_RESET","ADMIN_USER_LIST_REQUEST","ADMIN_USER_LIST_SUCCESS","ADMIN_USER_LIST_FAILURE","USER_REGISTER_RESET","axios","userLoginRequest","type","userLoginSuccess","data","payload","userLoginFailure","error","userLogout","userAction_details","email","password","dispatch","config","headers","post","logout_action","profileReset_action","registerReset_action","userRegisterRequest","userRegisterSuccess","userRegisterFailure","userRegisterAction_details","name","console","log","userProfileDetailsRequest","userProfileDetailsSuccess","userProfileDetailsFailure","userProfileAction_details","id","getState","userLogin","userInfo","Authorization","token","get","adminUserProfileRequest","adminUserProfileSuccess","adminUserProfileFailure","adminUserAction"],"mappings":"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","sourcesContent":["import {USER_LOGIN_REQUEST,\n        USER_LOGIN_SUCCESS,\n        USER_LOGIN_FAILURE,\n        USER_LOGOUT,\n\n        USER_REGISTER_REQUEST,\n        USER_REGISTER_SUCCESS,\n        USER_REGISTER_FAILURE,\n\n        USER_DETAILS_REQUEST,\n        USER_DETAILS_SUCCESS,\n        USER_DETAILS_FAILURE,\n        USER_DETAILS_RESET,\n\n        ADMIN_USER_LIST_REQUEST,\n        ADMIN_USER_LIST_SUCCESS,\n        ADMIN_USER_LIST_FAILURE,\n        USER_REGISTER_RESET,\n        \n        } from '../constants/userConstants' \n\n\nimport axios from 'axios';\n\n//LOGIN\n    const userLoginRequest = () =>\n    {\n        return {\n            type:USER_LOGIN_REQUEST\n        }\n    }\n    \n    const userLoginSuccess = data =>\n    {\n        return{\n          type:USER_LOGIN_SUCCESS, \n          payload: data\n        }\n    }\n    \n    const userLoginFailure = error =>\n    {\n        return{\n           type:USER_LOGIN_FAILURE,\n           payload: error\n        }\n    }\n\n    const userLogout = () =>\n    {\n        return {\n            type:USER_LOGOUT\n        }\n    }\n\n    \n\n\nexport const userAction_details =(email,password)=> async(dispatch)=> {\n\n    try \n    {\n        dispatch(userLoginRequest())\n\n        const config={\n            headers:{\n                'Content-Type':\"application/json\"\n            }\n        }\n\n        const {data}= await axios.post('http://localhost:4000/login_brad/add',{email,password},config)\n\n        dispatch(userLoginSuccess(data))\n\n        // localStorage.setItem('cartItemsss',JSON.stringify(getState().cartList.cartItemsss))\n\n    } catch (error) {\n\n        dispatch(userLoginFailure(error))\n        \n    }\n}\n\n\n\n\n\n\n\n//Logout\n\nexport const logout_action=()=>async(dispatch)=> \n{\n    dispatch(userLogout())\n}\n\n//Profile logout\nexport const profileReset_action=()=>async(dispatch)=> \n{\n    dispatch ({\n        type:USER_DETAILS_RESET\n    })\n}\n\n\n\n//Register logout\nexport const registerReset_action=()=>async(dispatch)=> \n{\n    dispatch ({\n        type:USER_REGISTER_RESET\n    })\n}\n\n\n\n\n//Register\nconst userRegisterRequest = () =>\n    {\n        return {\n            type:USER_REGISTER_REQUEST\n        }\n    }\n    \n    const userRegisterSuccess = data =>\n    {\n        return{\n          type:USER_REGISTER_SUCCESS, \n          payload: data\n        }\n    }\n    \n    const userRegisterFailure = error =>\n    {\n        return{\n           type:USER_REGISTER_FAILURE,\n           payload: error\n        }\n    }\n\nexport const userRegisterAction_details =(name,email,password)=> async(dispatch)=> {\n\n    try \n    {\n        dispatch(userRegisterRequest())\n\n        const config={\n            headers:{\n                'Content-Type':\"application/json\"\n            }\n        }\n        console.log(\"After config\");\n        const {data}= await axios.post('http://localhost:4000/register_brad/add',{name,email,password},config)\n        console.log(\"After data\");\n        dispatch(userRegisterSuccess(data))\n        console.log(\"USER RR SUEECESS\");\n        dispatch(userLoginSuccess(data))\n        console.log(\"USER LL\");\n        // localStorage.setItem('cartItemsss',JSON.stringify(getState().cartList.cartItemsss))\n\n    } catch (error) {\n        console.log(\"User Register actions\");\n        dispatch(userRegisterFailure(error))\n        \n    }\n}\n\n\n\n\n\n//UserProfileDetails\nconst userProfileDetailsRequest = () =>\n    {\n        return {\n            type:USER_DETAILS_REQUEST\n        }\n    }\n    \n    const userProfileDetailsSuccess = data =>\n    {\n        return{\n          type:USER_DETAILS_SUCCESS, \n          payload: data\n        }\n    }\n    \n    const userProfileDetailsFailure = error =>\n    {\n        return{\n           type:USER_DETAILS_FAILURE,\n           payload: error\n        }\n    }\n\nexport const userProfileAction_details =(id)=> async(dispatch,getState)=> {\n\n    try \n    {\n        dispatch(userProfileDetailsRequest())\n\n        const {userLogin:{userInfo}} = getState()\n       \n        //Q.use??\n        const config={\n            headers:{\n                'Content-Type':\"application/json\",\n                Authorization:`Bearer ${userInfo.token}`\n            }\n        }\n        console.log(\"Profile After config\");\n        //Q.WHy not direct profile in place of id?\n        console.log(\"waiting for data\");\n        const {data}= await axios.get(`http://localhost:4000/login_brad/${id}`,config)\n        console.log(\"Profile After data\",data);\n\n        dispatch(userProfileDetailsSuccess(data))\n        console.log(\"Profile success\");\n       \n\n    } catch (error) {\n        console.log(\"User UserProfileDetails actions\");\n        dispatch(userProfileDetailsFailure(error))\n        \n    }\n}\n\n\n\n\n\n\n\n//ADMIN User list\nconst adminUserProfileRequest = () =>\n    {\n        return {\n            type:ADMIN_USER_LIST_REQUEST\n        }\n    }\n    \n    const adminUserProfileSuccess = data =>\n    {\n        return{\n          type:ADMIN_USER_LIST_SUCCESS, \n          payload: data\n        }\n    }\n    \n    const adminUserProfileFailure = error =>\n    {\n        return{\n           type:ADMIN_USER_LIST_FAILURE,\n           payload: error\n        }\n    }\n\nexport const adminUserAction =()=> async(dispatch,getState)=> {\n\n    try \n    {\n        dispatch(adminUserProfileRequest())\n\n        const {userLogin:{userInfo}} = getState()\n       \n        //Q.use??\n        const config={\n            headers:{\n                // 'Content-Type':\"application/json\",\n                Authorization:`Bearer ${userInfo.token}`\n            }\n        }\n        // console.log(\"Profile After config\");\n        //Q.WHy not direct profile in place of id?\n        // console.log(\"waiting for data\");\n        const {data}= await axios.get(`http://localhost:4000/login_brad/allUsers`,config)\n        // console.log(\"Profile After data\",data);\n\n        dispatch(adminUserProfileSuccess(data))\n        // console.log(\"Profile success\");\n       \n\n    } catch (error) {\n        console.log(\"User ADMINProfileDetails actions\");\n        dispatch(adminUserProfileFailure(error))\n        \n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}